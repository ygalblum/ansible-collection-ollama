- name: Make sure the required related facts are available
  ansible.builtin.setup:
    gather_subset:
    - "!all"
    - "!min"
    - kernel

- name: Get kernel version
  ansible.builtin.set_fact:
    current_kernel_version: "{{ ansible_facts.kernel }}"

- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_only: true
  async: 1800
  poll: 60

- name: Get default kernel
  ansible.builtin.command:
    cmd: /sbin/grubby --default-kernel
  register: _grubby_rc
  changed_when: false

- name: Parse default kernel version
  ansible.builtin.set_fact:
    default_kernel_version: "{{ ((((_grubby_rc.stdout_lines[0] | split('/'))[2] | split('-'))[1:]) | join('-')) | trim }}"

- name: Reboot if the current kernel version is not the default
  when: current_kernel_version != default_kernel_version
  ansible.builtin.reboot:

- name: Install EPEL
  ansible.builtin.dnf:
    name: epel-release
    state: present

# TODO adjust according to running OS (Fedora/CentOS/RHEL)
- name: Set CUDA Repo OSName
  ansible.builtin.set_fact:
    ollama_cuda_os_name: rhel
    ollama_cuda_os_version: 9

- name: Add NVIDIA CUDA repository
  ansible.builtin.command:
    cmd: "dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/{{ ollama_cuda_os_name }}{{ ollama_cuda_os_version }}/{{ ansible_machine }}/cuda-{{ ollama_cuda_os_name }}{{ ollama_cuda_os_version }}.repo" # noqa: yaml[line-length]
    creates: /etc/yum.repos.d/cuda-{{ ollama_cuda_os_name }}{{ ollama_cuda_os_version }}.repo

- name: Add NVIDIA toolkit repository
  ansible.builtin.command:
    cmd: dnf config-manager --add-repo https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo
    creates: /etc/yum.repos.d/nvidia-container-toolkit.repo

- name: Install the required packages
  ansible.builtin.dnf:
    name:
    - cuda-drivers
    - nvidia-container-toolkit
    - podman
    - kernel-devel
    - kernel-headers
    state: present
  async: 1800
  poll: 60

- name: Add the NVIDIA module
  community.general.modprobe:
    name: nvidia
    persistent: present
    state: present

- name: Start and enable NVIDIA Persistenced
  ansible.builtin.systemd_service:
    state: started
    enabled: true
    name: nvidia-persistenced.service

- name: Create CDI File
  ansible.builtin.command:
    cmd: nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml
    creates: /etc/cdi/nvidia.yaml

- name: Enable lingering for ansible_user
  ansible.builtin.command:
    cmd: loginctl enable-linger {{ ansible_user_id }}
    creates: '/var/lib/systemd/linger/{{ ansible_user_id }}'

- name: Add the ip_table module to allow using a Podman Network
  community.general.modprobe:
    name: ip_tables
    persistent: present
    state: present
