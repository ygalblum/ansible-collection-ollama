- name: Create Quadlet directory
  ansible.builtin.file:
    path: "{{ ollama_quadlet_directory }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0755'

- name: Create template files list
  ansible.builtin.set_fact:
    _ollama_template_files_list: "{{ ['ollama.container', 'ollama.network', 'ollama.volume'] }}"
    _ollama_services_list: "{{ ['ollama'] }}"

- name: Setup Proxy
  when: ollama_expose_secured_port
  ansible.builtin.include_tasks: setup_secure_port.yml

- name: Create Quadlet files
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ ollama_quadlet_directory }}/{{ item }}"
    mode: '0644'
  loop: "{{ _ollama_template_files_list }}"

- name: Run daemon reload to make Quadlet create the service files
  ansible.builtin.systemd:
    daemon_reload: true
    scope: user

- name: "Starting the ollama services"
  ansible.builtin.systemd_service:
    state: started
    scope: user
    name: "{{ item }}.service"
  async: 1800
  poll: 0
  when: _ollama_services_list | length > 0
  loop: "{{ _ollama_services_list }}"
  register: service_start_async_results

- name: Wait for all services to start
  ansible.builtin.async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ service_start_async_results.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: async_poll_results
  until: async_poll_results.finished
  retries: 180
  delay: 10

- name: Pull models
  ansible.builtin.command:
    cmd: "podman exec ollama ollama pull {{ item }}"
  async: 1800
  poll: 60
  loop: "{{ ollama_models }}"
